#! /bin/bash -x
shopt -s nullglob

in=m/raw.m
test -f $in || exit 1

out=m/simp.m
log=m/simp.log
rm -f $out $log*

math -run "
	in=\"$in\"
	out=\"$out\"
" << \_EOF_ > $log
AppendTo[$Echo, "stdout"];
$Post = LeafCount;

mod = "gl";
<< ../Packages/fafc.m;
(*<< FormCalc`tools`btensor`;*)
<< ../Packages/U2Simplify.m;
<< ../Packages/MSf.m;
<< ../Packages/MUERules.m;
<< ../Packages/XfSimplify.m;

ReA0/: ReA0[m1_] - ReA0[m2_] := Re[B0[0, m1, m2]] (m1 - m2);
A0/: A0[m1_] - A0[m2_] := B0[0, m1, m2] (m1 - m2);

B0[m_, 0, m_] := B0[0, m, m] + 2;

dMSfsq1[2,1,t_,g_] := Conjugate[dMSfsq1[1,2,t,g]];

reimrulz = {
  U2c1[x__] a_ + U2c1C[x__] b_ :> 2 Re[U2c1[x] a] /; a == Conjugate[b],
  U2c1[x__] a_ + U2c1C[x__] b_ :> 2 I Im[U2c1[x] a] /; a == -Conjugate[b],
  U2c2[x__] a_ + U2c2C[x__] b_ :> 2 Re[U2c2[x] a] /; a == Conjugate[b],
  U2c2[x__] a_ + U2c2C[x__] b_ :> 2 I Im[U2c2[x] a] /; a == -Conjugate[b]
};

tc[x_, n_] := TermCollect[x /. p_Plus :> Simplify[p] /; LeafCount[p] < n] /.
  reimrulz;


simp = DeleteCases[Get[in], x_ -> x_] /. Re[A0[m_]] :> ReA0[m]

simp = USfSimplify[simp]

simp = XfSimplify[simp]

simp = simp /. x:(dMSfsq1[1,1,4,3]/(UCSf[1,1,4,3] - UCSf[1,2,4,3])) :>
  (x /. Cases[simp, _Rule])

simp = U2Simplify[simp]

simp = TermCollect[simp] /. reimrulz

simp = tc[simp, 200]

simp = U2Simplify[simp]

simp = tc[simp, 300]

simp = tc[simp, 300]

simp = U2Simplify[simp]

simp = TermCollect[simp] /. reimrulz /. ReA0[m_] :> Re[A0[m]]

Put[simp, out];

_EOF_

gzip $log

test -f $out

