#if 0
* hddSM-CalcRenConst.F
* renormalization constants
* generated by FormCalc 8.4 on 29-Apr-2014 19:59
* this file is part of FeynHiggs
#endif

#include "externals.h"
#include "types.h"
#include "debug.h"

#include "inline.h"

	subroutine hddSM_CalcRenConst
	implicit none

#include "Decay.h"
#include "hddSM-renconst.h"

	integer Gen3

	ComplexType dup1, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7
	ComplexType tmp8, tmp9

#include "inline.h"

        dMWsq1 = -(1/(4.D0*Pi)*
     &      (AlfaMZ*(8*Re(B00(MW2,MW2,0.D0)) + 
     &          (1/4.D0*(-6*Re(A0(MW2)) - (1 + 12*CW2)*Re(A0(MZ2)) - 
     &                Re(A0(MHiggs2(hno))) + 
     &                ((CW2**2*(12*MW2 + 8*MZ2) - 4*MW2*SW2**2)*
     &                   Re(B0(MW2,MW2,MZ2)))/CW2 - 
     &                MW2*(4*Re(B0(MW2,MW2,MHiggs2(hno))) + 
     &                   8*CW2*Re(B1(MW2,MW2,MZ2)))) + 
     &             Re(B00(MW2,MW2,MZ2)) + 
     &             8*CW2*Re(B00(MW2,MW2,MZ2)) + 
     &             Re(B00(MW2,MW2,MHiggs2(hno))))/SW2 + 
     &          MW2*(2*Re(B0(MW2,0.D0,MW2)) - 2*Re(B1(MW2,MW2,0.D0)))))
     &      )

	LOOP(Gen3, 1,3,1)

        dMWsq1 = dMWsq1 - 
     &    1/(4.D0*Pi)*(AlfaMZ*
     &        (Re(A0(Mf2(2,Gen3))) + 
     &          3*(Re(A0(Mf2(bH,Gen3))) + 
     &             Mf2(tH,Gen3)*
     &              Re(B0(MW2,Mf2(bH,Gen3),Mf2(tH,Gen3)))) - 
     &          2*Re(B00(MW2,0.D0,Mf2(2,Gen3))) - 
     &          6*Re(B00(MW2,Mf2(tH,Gen3),Mf2(bH,Gen3))) + 
     &          MW2*(Re(B1(MW2,0.D0,Mf2(2,Gen3))) + 
     &             3*Re(B1(MW2,Mf2(tH,Gen3),Mf2(bH,Gen3))))))/SW2

	ENDLOOP(Gen3)

#ifdef DETAILED_DEBUG
	DCOUP "dMWsq1 =", dMWsq1 ENDL
#endif

	dup1 = (CW2*(9*CW2 - 2*SW2) + SW2**2)/CW2

        dMZsq1 = 1/(16.D0*Pi)*
     &    (AlfaMZ*(2*CW2**2*dup1*Re(A0(MW2)) + 
     &         CW2*(Re(A0(MZ2)) + Re(A0(MHiggs2(hno)))) - 
     &         2*(-2*MW2*Re(B0(MZ2,MZ2,MHiggs2(hno))) + 
     &            CW2*(-6*Re(B00(MZ2,0.D0,0.D0)) + 
     &               2*((CW2**2*(2*MW2 + 5*MZ2) - 2*MW2*SW2**2)*
     &                   Re(B0(MZ2,MW2,MW2)) + 
     &                  CW2*dup1*Re(B00(MZ2,MW2,MW2)) + 
     &                  Re(B00(MZ2,MHiggs2(hno),MZ2))) - 
     &               MZ2*(-3*Re(B1(MZ2,0.D0,0.D0)) - 
     &                  4*CW2**2*Re(B1(MZ2,MW2,MW2)))))))/
     &     (CW2**2*SW2)

	LOOP(Gen3, 1,3,1)

        dMZsq1 = dMZsq1 - 
     &    1/(24.D0*Pi)*(AlfaMZ*
     &        ((9 - (12 - 8*SW2)*SW2)*Re(A0(Mf2(bH,Gen3))) + 
     &          (9 - (24 - 32*SW2)*SW2)*Re(A0(Mf2(tH,Gen3))) + 
     &          9*(Mf2(bH,Gen3)*
     &              Re(B0(MZ2,Mf2(bH,Gen3),Mf2(bH,Gen3))) + 
     &             Mf2(tH,Gen3)*
     &              Re(B0(MZ2,Mf2(tH,Gen3),Mf2(tH,Gen3)))) + 
     &          3*(Mf2(2,Gen3)*
     &              Re(B0(MZ2,Mf2(2,Gen3),Mf2(2,Gen3))) + 
     &             (1 - (4 - 8*SW2)*SW2)*
     &              (Re(A0(Mf2(2,Gen3))) - 
     &                2*Re(B00(MZ2,Mf2(2,Gen3),Mf2(2,Gen3))))) - 
     &          2*((9 - (12 - 8*SW2)*SW2)*
     &              Re(B00(MZ2,Mf2(bH,Gen3),Mf2(bH,Gen3))) + 
     &             (9 - (24 - 32*SW2)*SW2)*
     &              Re(B00(MZ2,Mf2(tH,Gen3),Mf2(tH,Gen3)))) + 
     &          MZ2*(3*(1 - (4 - 8*SW2)*SW2)*
     &              Re(B1(MZ2,Mf2(2,Gen3),Mf2(2,Gen3))) + 
     &             (9 - (12 - 8*SW2)*SW2)*
     &              Re(B1(MZ2,Mf2(bH,Gen3),Mf2(bH,Gen3))) + 
     &             (9 - (24 - 32*SW2)*SW2)*
     &              Re(B1(MZ2,Mf2(tH,Gen3),Mf2(tH,Gen3))))))/
     &      (CW2*SW2)

	ENDLOOP(Gen3)

#ifdef DETAILED_DEBUG
	DCOUP "dMZsq1 =", dMZsq1 ENDL
#endif

	dSW1 = 1/2.D0*(CW2*(dMZsq1*MW2 - dMWsq1*MZ2))/(MW2*MZ2*SW)

#ifdef DETAILED_DEBUG
	DCOUP "dSW1 =", dSW1 ENDL
#endif

        dZAA1heavy = 1/(12.D0*Pi)*
     &    (AlfaMZ*(15*Re(B0(0.D0,MW2,MW2)) + 6*Re(B1(0.D0,MW2,MW2)) + 
     &        4*(4*Re(B1(0.D0,Mf2(tH,3),Mf2(tH,3))) + 
     &           9*Re(DB00(0.D0,MW2,MW2)) - 
     &           8*Re(DB00(0.D0,Mf2(tH,3),Mf2(tH,3))))))

#ifdef DETAILED_DEBUG
	DCOUP "dZAA1heavy =", dZAA1heavy ENDL
#endif

        dZAA1light = 1/(3.D0*Pi)*
     &    (AlfaMZ*(3*(Re(A0(ME2)) + Re(A0(ML2)) + Re(A0(MM2))) + 
     &         Re(A0(Mf2(bH,1))) + Re(A0(Mf2(bH,2))) + 
     &         Re(A0(Mf2(bH,3))) + 
     &         4*(Re(A0(Mf2(tH,1))) + Re(A0(Mf2(tH,2)))) - 
     &         6*(Re(B00(MZ2,ME2,ME2)) + Re(B00(MZ2,ML2,ML2)) + 
     &            Re(B00(MZ2,MM2,MM2))) - 
     &         2*(Re(B00(MZ2,Mf2(bH,1),Mf2(bH,1))) + 
     &            Re(B00(MZ2,Mf2(bH,2),Mf2(bH,2))) + 
     &            Re(B00(MZ2,Mf2(bH,3),Mf2(bH,3)))) - 
     &         8*(Re(B00(MZ2,Mf2(tH,1),Mf2(tH,1))) + 
     &            Re(B00(MZ2,Mf2(tH,2),Mf2(tH,2)))) + 
     &         MZ2*(3*(Re(B1(MZ2,ME2,ME2)) + Re(B1(MZ2,ML2,ML2)) + 
     &               Re(B1(MZ2,MM2,MM2))) + 
     &            Re(B1(MZ2,Mf2(bH,1),Mf2(bH,1))) + 
     &            Re(B1(MZ2,Mf2(bH,2),Mf2(bH,2))) + 
     &            Re(B1(MZ2,Mf2(bH,3),Mf2(bH,3))) + 
     &            4*(Re(B1(MZ2,Mf2(tH,1),Mf2(tH,1))) + 
     &               Re(B1(MZ2,Mf2(tH,2),Mf2(tH,2)))))))/MZ2

#ifdef DETAILED_DEBUG
	DCOUP "dZAA1light =", dZAA1light ENDL
#endif

        dZZA1 = 1/(2.D0*Pi)*
     &    (AlfaMZ*(2*MW2*Re(B0(0.D0,MW2,MW2)) - 
     &         (5*CW2 - SW2)*(Re(A0(MW2)) - 2*Re(B00(0.D0,MW2,MW2))))
     &       )/(CW*MZ2*SW)

	LOOP(Gen3, 1,3,1)

        dZZA1 = dZZA1 + 
     &    1/(6.D0*Pi)*(AlfaMZ*
     &        (3*(1 - 4*SW2)*
     &           (Re(A0(Mf2(2,Gen3))) - 
     &             2*Re(B00(0.D0,Mf2(2,Gen3),Mf2(2,Gen3)))) + 
     &          (3 - 4*SW2)*
     &           (Re(A0(Mf2(bH,Gen3))) - 
     &             2*Re(B00(0.D0,Mf2(bH,Gen3),Mf2(bH,Gen3)))) + 
     &          2*(3 - 8*SW2)*
     &           (Re(A0(Mf2(tH,Gen3))) - 
     &             2*Re(B00(0.D0,Mf2(tH,Gen3),Mf2(tH,Gen3))))))/
     &      (CW*MZ2*SW)

	ENDLOOP(Gen3)

#ifdef DETAILED_DEBUG
	DCOUP "dZZA1 =", dZZA1 ENDL
#endif

	dZe1 = -(1/2.D0*(CW*(dZAA1heavy + dZAA1light) + dZZA1*SW)/CW)

#ifdef DETAILED_DEBUG
	DCOUP "dZe1 =", dZe1 ENDL
#endif

	LOOP(gno1, 1,3,1)

#ifdef DETAILED_DEBUG
	DCOUP "gno1 =", gno1 ENDL
#endif

        dMf1(4,gno1) = 
     &   1/(144.D0*Pi)*(AlfaMZ*Mf(bH,gno1)*
     &       (MW2*(8*(3 - 2*SW2)*SW2*
     &             Re(B0(Mf2(bH,gno1),MZ2,Mf2(bH,gno1))) - 
     &            (9 - (12 - 8*SW2)*SW2)*
     &             Re(B1(Mf2(bH,gno1),Mf2(bH,gno1),MZ2))) - 
     &         9*CW2*(Mf2(bH,gno1)*
     &             (Re(B0(Mf2(bH,gno1),MZ2,Mf2(bH,gno1))) - 
     &               Re(B0(Mf2(bH,gno1),Mf2(bH,gno1),
     &                 MHiggs2(hno))) + 
     &               Re(B1(Mf2(bH,gno1),Mf2(bH,gno1),MZ2)) + 
     &               Re(B1(Mf2(bH,gno1),Mf2(bH,gno1),MHiggs2(hno)))
     &               ) + (2*MW2 + Mf2(bH,gno1))*
     &             Re(B1(Mf2(bH,gno1),Mf2(tH,gno1),MW2)) + 
     &            Mf2(tH,gno1)*
     &             (2*Re(B0(Mf2(bH,gno1),MW2,Mf2(tH,gno1))) + 
     &               Re(B1(Mf2(bH,gno1),Mf2(tH,gno1),MW2))))))/
     &     (CW2*MW2*SW2)

#ifdef DETAILED_DEBUG
	DCOUP "dMf1(4,gno1) =", dMf1(4,gno1) ENDL
#endif

	ENDLOOP(gno1)

	LOOP(gno1, 1,3,1)

	tmp1 = B1(Mf2(bH,gno1),Mf2(bH,gno1),MZ2)

	tmp2 = B1(Mf2(bH,gno1),Mf2(bH,gno1),MHiggs2(hno))

	tmp3 = B1(Mf2(bH,gno1),Mf2(tH,gno1),MW2)

	tmp4 = DB0(Mf2(bH,gno1),MW2,Mf2(tH,gno1))

	tmp5 = DB0(Mf2(bH,gno1),MZ2,Mf2(bH,gno1))

	tmp6 = DB0(Mf2(bH,gno1),Mf2(bH,gno1),MHiggs2(hno))

	tmp7 = DB1(Mf2(bH,gno1),Mf2(bH,gno1),MZ2)

	tmp8 = DB1(Mf2(bH,gno1),Mf2(bH,gno1),MHiggs2(hno))

	tmp9 = DB1(Mf2(bH,gno1),Mf2(tH,gno1),MW2)

	LOOP(gno2, 1,3,1)

#ifdef DETAILED_DEBUG
	DCOUP "gno1,gno2 =", gno1,gno2 ENDL
#endif

	if( gno1.eq.gno2 ) then

        dZfL1(4,gno1,gno2) = 
     &   1/Pi*(AlfaMZ*(1/144.D0*
     &          ((2*MW2*(3 - 2*SW2)**2 + 9*CW2*Mf2(bH,gno1))*
     &             Re(tmp1))/CW2 + 
     &         1/8.D0*((2*MW2 + Mf2(tH,gno1))*Re(tmp3)) + 
     &         (1/16.D0*Re(tmp2) + 
     &            2*(1/8.D0*(Mf2(tH,gno1)*Re(tmp4)) - 
     &               1/144.D0*
     &                ((MW2*(24 - 16*SW2)*SW2 - 
     &                     9*CW2*Mf2(bH,gno1))*Re(tmp5))/CW2 - 
     &               1/16.D0*(Mf2(bH,gno1)*Re(tmp6))) + 
     &            1/72.D0*((MW2*(9 - (12 - 8*SW2)*SW2) + 
     &                  9*CW2*Mf2(bH,gno1))*Re(tmp7))/CW2 + 
     &            1/8.D0*(Mf2(bH,gno1)*Re(tmp8) + 
     &               (2*MW2 + Mf2(bH,gno1) + Mf2(tH,gno1))*Re(tmp9)
     &               ))*Mf2(bH,gno1)))/(MW2*SW2)

#ifdef DETAILED_DEBUG
	DCOUP "dZfL1(4,gno1,gno2) =", dZfL1(4,gno1,gno2) ENDL
#endif

        dZfR1(4,gno1,gno2) = 
     &   1/Pi*(AlfaMZ*(1/144.D0*
     &          ((8*MW2*SW2**2 + 9*CW2*Mf2(bH,gno1))*Re(tmp1))/CW2+
     &           (1/16.D0*Re(tmp2) + 
     &            2*(1/8.D0*(Mf2(tH,gno1)*Re(tmp4)) - 
     &               1/144.D0*
     &                ((MW2*(24 - 16*SW2)*SW2 - 
     &                     9*CW2*Mf2(bH,gno1))*Re(tmp5))/CW2 - 
     &               1/16.D0*(Mf2(bH,gno1)*Re(tmp6))) + 
     &            1/72.D0*((MW2*(9 - (12 - 8*SW2)*SW2) + 
     &                  9*CW2*Mf2(bH,gno1))*Re(tmp7))/CW2 + 
     &            1/8.D0*(Re(tmp3) + Mf2(bH,gno1)*Re(tmp8) + 
     &               (2*MW2 + Mf2(bH,gno1) + Mf2(tH,gno1))*Re(tmp9)
     &               ))*Mf2(bH,gno1)))/(MW2*SW2)

#ifdef DETAILED_DEBUG
	DCOUP "dZfR1(4,gno1,gno2) =", dZfR1(4,gno1,gno2) ENDL
#endif

	else

	dZfL1(4,gno1,gno2) = 0

#ifdef DETAILED_DEBUG
	DCOUP "dZfL1(4,gno1,gno2) =", dZfL1(4,gno1,gno2) ENDL
#endif

	dZfR1(4,gno1,gno2) = 0

#ifdef DETAILED_DEBUG
	DCOUP "dZfR1(4,gno1,gno2) =", dZfR1(4,gno1,gno2) ENDL
#endif

	endif

	ENDLOOP(gno2)

	ENDLOOP(gno1)

	end
