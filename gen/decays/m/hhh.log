Mathematica 10.1.0 for Linux x86 (64-bit)
Copyright 1988-2015 Wolfram Research, Inc.

In[1]:= 
In[2]:= In[2]:= << FeynArts`;
FeynArts 3.9
by Hagen Eck, Sepp Kueblbeck, and Thomas Hahn
last revised 4 Apr 15

In[3]:= In[3]:= << FormCalc`;
FormCalc 8.4
by Thomas Hahn
last revised 30 Mar 15

In[4]:= In[4]:= (*SetOptions[CalcFeynAmp, RetainFile -> True];*)
In[5]:= (*ReadFormDebug[1, "decay.log"];*)
In[6]:= In[6]:= FormPre = Identity;
In[7]:= FormSub = Identity;
In[8]:= In[8]:= (*loopopt[1] = LastSelections -> F[15];*)
In[9]:= _loopopt = Sequence[];
In[10]:= In[10]:= simp = If[nosimp === 0, Identity, Simplify];
In[11]:= fsimp = If[nosimp === 0, Identity, FullSimplify];
In[12]:= In[12]:= NClear[];
In[13]:= In[13]:= N[sqrt2] = Sqrt[2.];
In[14]:= sqrt2/: sqrt2/2 = 1/sqrt2;
In[15]:= sqrt2/: sqrt2^2 = 2;
In[16]:= sqrt2/: sqrt2^-2 = 1/2;
In[17]:= In[17]:= Sq[m1] = m12;
In[18]:= Sq[m2] = m22;
In[19]:= Sq[m3] = m32;
In[20]:= Sq[MHiggs[a_]] = MHiggs2[a];
In[21]:= MH = MHiggs[hno];
In[22]:= MH2 = MHiggs2[hno];
In[23]:= Mh0tree = Mh0;
In[24]:= Mh0tree2 = Mh02;
In[25]:= MHHtree = MHH;
In[26]:= MHHtree2 = MHH2;
In[27]:= MA0tree = MA0;
In[28]:= MA0tree2 = MA02;
In[29]:= In[29]:= Sq[GS] =.;
In[30]:= GS = GSMH;
In[31]:= Sq[GSMH] = 4 Pi AlfasMH;
In[32]:= Sq[GSDb] = 4 Pi AlfasDb;
In[33]:= In[33]:= Sq[EL] =.;
In[34]:= EL = EL0;
In[35]:= Sq[EL0] = 4 Pi Alfa0;
In[36]:= In[36]:= trigrulz = {
  CA a_ + CA2 b_ -> CA (a + CA b),
  SA a_ + SA2 b_ -> SA (a + SA b),
  CB a_ + CB2 b_ -> CB (a + CB b),
  SB a_ + SB2 b_ -> SB (a + SB b)
};
In[37]:= In[37]:= frulz[_ -> 0] = {};
In[38]:= In[38]:= frulz[t_ -> ty_] := {
  Mf[t,1] -> Mf[ty,1],
  Mf[t,2] -> Mf[ty,2],
  Mf[t,3] -> Mf[ty,3],
  Mf[t,g_] -> Mf[ty,g],
  Mf2[t,1] -> Mf2[ty,1],
  Mf2[t,2] -> Mf2[ty,2],
  Mf2[t,3] -> Mf2[ty,3],
  Mf2[t,g_] -> Mf2[ty,g] };
In[39]:= In[39]:= sfrulz[t_ -> 0] := {		(* for SM *)
  Mqy[t,g_] -> Mf[t,g] };
In[40]:= In[40]:= sfrulz[t_ -> ty_] := {
  Mqy[t,g_] -> Mf[ty,g],
  MSf[s_,t,g_] -> MSf[s,ty,g],
  MSf2[s_,t,g_] -> MSf2[s,ty,g],
  USf[s__,t,g_] -> USf[s,ty,g],
  USfC[s__,t,g_] -> USfC[s,ty,g],
  MASf[as_,t] -> MASf[as,ty],
  MASf2[as_,t] -> MASf2[as,ty],
  UASf[as__,t] -> UASf[as,ty],
  UASfC[as__,t] -> UASfC[as,ty],
  Kf[g__,t] -> Kf[g,ty],
  KfC[g__,t] -> KfC[g,ty] };
In[41]:= In[41]:= massrulz[u_, uy_, d_, dy_] := Flatten[{
  frulz[3 -> u],
  sfrulz[3 -> uy],
  frulz[4 -> d],
  sfrulz[4 -> dy] }];
In[42]:= In[42]:= final[expr_] := expr /.
  gather[q_, a_:1] :> sgather[reim[q] a] /.
  sgather -> split /.
  { Finite -> 1,
    USf[a__] USfC[a__] -> USf2[a],
    ZHiggs[i_, j_] -> XHiggs[i, j, uzext],
    IndexDelta -> IDelta,
    Sqrt[2] -> sqrt2,
    1/Sqrt[2] -> 1/sqrt2,
    re[h_[x__]] :> ToSymbol[h, "Re"][x],
    im[h_[x__]] :> ToSymbol[h, "Im"][x] } /.
  IDelta -> Delta;
In[43]:= In[43]:= (*Mdy[g_] := Mfy[7, g];*)
In[44]:= Sq[Mfy[a__]] = Mfy2[a];
In[45]:= RealQ[_Mfy] = True;
In[46]:= In[46]:= Dim[gno1] = Dim[gno2] = 3;
In[47]:= In[47]:= Format[Mino3, FortranForm] := "M_3";
In[48]:= Format[Mino3C, FortranForm] := "M_3C";
In[49]:= In[49]:= In[49]:= $DebugCmd = {"#ifdef DETAILED_DEBUG\n", "#endif\n", "DCOUP ", " ENDL"};
In[50]:= In[50]:= deepestOnly[{___, l_}] = {l};
In[51]:= In[51]:= SetOptions[Paint,
  PaintLevel :> deepestOnly[InsertionLevel],
  ColumnsXRows -> {3, 4}];
In[52]:= In[52]:= paint[_[], _] := {};
In[53]:= In[53]:= paint[ins_, suffix_] := (
  MkDir["d"];
  $PaintSE = ToFileName["d", tag <> "-"];
  Paint[ ins,
    DisplayFunction -> (Export[$PaintSE <> suffix <> ".ps",
      #, "PS", ImageSize -> 144 {3, 4} ]&) ]
) /; debug === 1;
In[54]:= In[54]:= In[54]:= SetOptions[WriteExpr, FinalCollect -> True];
In[55]:= In[55]:= In[55]:= Attributes[wfok] = {Orderless};
In[56]:= wfok[] = True;
In[57]:= wfok[_, S[4]] = wfok[_, V[2]] = True;
In[58]:= _wfok = False;
In[59]:= In[59]:= In[59]:=                   amps[loop_, proc_, model_, excl_, rul_, foo_, opt___] :=
Block[ {io, top, ins, insv, insct, amp, vert},
  SetOptions[InsertFields, Model -> model, opt];

  io = Length[Flatten[{#}]]&/@ proc;

  top = CreateTopologies[loop, io,
    ExcludeTopologies -> {Tadpoles, WFCorrections[excl]}];
  ins = InsertFields[top, proc, loopopt[loop]];
  insv = DiagramSelect[ins, wfok@@ WFCorrectionFields[##] &];
  paint[insv, "v" <> ToString[loop]];

  top = CreateCTTopologies[loop, io,
    ExcludeTopologies -> {TadpoleCTs, WFCorrectionCTs[excl]}];
  ins = InsertFields[top, proc];
  insct = DiagramSelect[ins, wfok@@ WFCorrectionCTFields[##] &];
  paint[insct, "ct" <> ToString[loop]];

  amp = CreateFeynAmp[Join[insv, Head[insv]@@ insct]];

  SetOptions[CalcFeynAmp, Dimension -> If[model === SM, D, 4]];

  amp = OffShell[amp, 1 -> m1,
    2 -> ((If[# === 0, m2 = m22 = 0]; m2)&),
    3 -> ((If[# === 0, m3 = m32 = 0]; m3)&)];

FormSub = simp1 (*Identity*) (*TermCollect*) (*Simplify*);
  vert = CalcFeynAmp[foo[amp /. rul]];
  vert = final[vert];
(*
  vert = Collect[vert, {_Mat, _SumOver, _Den, _IndexDelta}, simp1];
*)

  Abbreviate[vert, 5, Preprocess -> simp1 (*, Deny -> HffDb*)] //elimDiv
];
In[60]:= In[60]:= In[60]:= IDelta/: IDelta[i_, j_] a_ := IDelta[i, j] (a /. j -> i) /; !FreeQ[a, j];
In[61]:= In[61]:= In[61]:= fxi[x_] := fsimp[x //. trigrulz] /. trigrulz;
In[62]:= In[62]:= Attributes[fsi] = {Listable};
In[63]:= fsi[x_] := x /; FreeQ[x, Plus];
In[64]:= fsi[x_] := fsi[x] = fxi[fxi[x]];
In[65]:= In[65]:= xi[x_] := simp[x //. trigrulz] /. trigrulz;
In[66]:= In[66]:= Attributes[si] = {Listable};
In[67]:= si[x_] := x /; FreeQ[x, Plus];
In[68]:= si[x_] := si[x] = xi[xi[x]];
In[69]:= In[69]:= simp1 = OnSize[100, fsi, 250, si, Map];
In[70]:= simp2 = fsimp;
In[71]:= In[71]:= loopint = _A0 | _B0 | _B1 | _B00 | _B11 | _DB0 | _DB1 | _DB00 | _DB11;
In[72]:= In[72]:= SetOptions[PrepareExpr,
  Expensive -> List@@ loopint,
  FinalTouch -> simp2];
In[73]:= In[73]:= In[73]:= elimDiv[expr_] := ToIndexIf[ expr /.
  (d:Den[MHiggs2[i_], MHiggs2[j_]]) -> d IndexDiff[i, j] ];
In[74]:= In[74]:= In[74]:= SetOptions[WriteSquaredME,
  FilePrefix -> tag <> "-",
  SymbolPrefix -> tag <> "_",
  Folder -> tag <> "-squaredme",
  FileIncludes -> {"#include \"externals.h\"\n\
#include \"types.h\"\n\
#include \"debug.h\"\n\n",
    "#include \"inline.h\"\n"},
  FileHeader -> StringReplace[FileHeader /. Options[WriteSquaredME],
    "#endif" -> "* this file is part of FeynHiggs\n#endif"]];
In[75]:= In[75]:= SetOptions[WriteRenConst,
  Folder -> tag <> "-renconst"];
In[76]:= In[76]:= job[proc_, model_, excl_, rul0_, rul1_, foo_, opt___] :=
Block[ {v0, v1, col, abbr, sub, uzext},
  v0 = amps[0, proc, model, excl, rul0, foo, opt];
  v1 = amps[1, proc, model, excl, rul1, foo, opt];

  uzext = If[ MatchQ[v0, _[0]], uzext0, uzext1 ];

  col = ColourME[All, All];
  abbr = OptimizeAbbr[final[Abbr[]]];
  sub = OptimizeAbbr[Subexpr[]] //fsi;

  Put[{v0, v1, col, abbr, sub}, ToFileName["m", tag <> ".amp"]];

  rcs = FindRenConst[{v0, v1, sub}];

  SetOptions[WriteSquaredME, SubroutineIncludes -> {
    If[ Length[rcs] === 0,
      "#include \"Decay.h\"\n",
      "#include \"Decay.h\"\n#include \"" <> tag <> "-renconst.h\"\n" ],
    "#include \"inline.h\"\n" }];

  WriteSquaredME[v0, v1, col, abbr, sub, "f",
    ExtraRules -> ToOldBRules,
    SymbolPrefix -> tag <> "_",
    LoopSquare -> True];	(* <<<!!! *)

  If[ Length[rcs] > 0,
FormSub = simp1;
    rcs = final[foo[CalcRenConst[rcs, loopopt[1]] /. rul1] /.
      ToOldBRules];
    Put[rcs, ToFileName["m", tag <> ".rc"]];
    WriteRenConst[rcs, "f"] ];
];
In[77]:= In[77]:= In[77]:= gather/: gather[q_, expr_:1] x_ := gather[q, expr x] /;
  FreeQ[x, gather];
In[78]:= In[78]:= gather/: gather[q_, a_:1] + gather[q_, b_:1] := gather[q, a + b] /;
  FreeQ[{a, b}, gather];
In[79]:= In[79]:= In[79]:= sgather/: sgather[x_] + sgather[y_] := sgather[x + y];
In[80]:= In[80]:= sgather/: sgather[x_] y_ := sgather[x y];
In[81]:= In[81]:= sgather[0] = 0;
In[82]:= In[82]:= In[82]:= split[x_] := ReTilde[x /. reim -> re] + cI ImTilde[x /. reim -> im];
In[83]:= In[83]:= In[83]:= $CKM = True;
In[84]:= $FV = {12, 13, 14};
In[85]:= cMSSMhgaga = {"MSSMQCD", "dAlfa", "KW", "FV", "Kf", "HGpGm", "Yuk", "HMixExt"};
In[86]:= cMSSM = DeleteCases[cMSSMhgaga, "HGpGm"];
In[87]:= SM = {"SMQCD", "dAlfa", "Yuk", "dZH1"};
In[88]:= In[88]:= Hel[3] = Hel[2]
Out[88]= Hel[2]

In[89]:= In[89]:= In[89]:= decay["hgaga"] := job[
  S[10, {hno}] -> {V[1], V[1]},
  cMSSMhgaga, _,
  {}, {},
  # /. massrulz[tH, tH, 0, bBR] /. {
    Yuk[3|4, _, g_, g_] :> hgagaQ,
    Yuk[13|14, _, g_, g_] :> hgagaSq,
    Hbb[h_, g_, g_] :> HffDb[0, h, 4, g] Mf[4, g]/Mf[bBR, g] } &
];
In[90]:= In[90]:= decay["hgagaSM"] := job[
  S[1] -> {V[1], V[1]},
  SM, _,
  {}, {},
  # /. massrulz[tH, tH, 0, 0] /. {
    Yuk[3|4, _, g_, g_] :> hgagaQ } & ];
In[91]:= In[91]:= In[91]:= decay["hgaZ"] := job[
  S[10, {hno}] -> {V[1], V[2]},
  cMSSMhgaga, _,
  {}, {},
  # /. massrulz[tH, tH, 0, bBR] /. {
    _Yuk -> 1,
    Hbb[h_, g_, g_] :> HffDb[0, h, 4, g] Mf[4, g]/Mf[bBR, g] } & ];
In[92]:= In[92]:= decay["hgaZSM"] := job[
  S[1] -> {V[1], V[2]},
  SM, _,
  {}, {},
  # /. massrulz[tH, tH, 0, 0] /. _Yuk -> 1 & ];
In[93]:= In[93]:= In[93]:= decay["hgg"] := job[
  S[10, {hno}] -> {V[5], V[5]},
  cMSSM, _,
  {}, {},
  simp[# /. massrulz[tH, tH, 0, bBR] /. {
    Yuk[3, h_, g_, g_] :> hggU[h, g],
    Yuk[4, h_, g_, g_] :> gather[hggD[h, g]],
    Yuk[_, h_, g_, g_] :> hggSq[h],
    Hbb[h_, g_, g_] :> HffDb[0, h, 4, g] Mf[4, g]/Mf[bBR, g] }]&
];
In[94]:= In[94]:= decay["hggSM"] := job[
  S[1] -> {V[5], V[5]},
  SM, _,
  {}, {},
  simp[# /. massrulz[tH, tH, 0, 0] /. {
    Yuk[3, h_, g_, g_] :> hggU[h, g],
    Yuk[4, h_, g_, g_] :> gather[hggD[h, g]] }]& ];
In[95]:= In[95]:= In[95]:= decay["hhh"] := job[
  S[10, {hno}] -> {S[10, {hno1}], S[10, {hno2}]},
  cMSSM /. "FV" -> "Hhh", 2|3,
  {}, DeltaHhh -> 0,
  # /. massrulz[3, 3, bTR, bTR] /. {
    _Yuk -> 1,
    _Hbb -> 1 } &,
  ExcludeParticles -> {U[5], V[5]} ];
In[96]:= In[96]:= In[96]:= hffjob[args__] :=
Block[ {dMWsq1, EL0 = ELMZ, Alfa0 = AlfaMZ},
  Options[dMWsq1] = {ExcludeParticles -> {}};	(* i.e. V[1] allowed here *)
  SetOptions[Abbreviate, Deny -> HffDb];
  job[ args,
    Hbb[h_, g_, g_] :> HffDb[sub1L, h, 4, g], _Hbb -> 1,
    # /. massrulz[tH, tH, bH, bH] /. _Yuk -> 1 &,
    ExcludeParticles -> {V[1], V[5]} ]
];
In[97]:= In[97]:= Hff[t_] := hffjob[
  S[10, {hno}] -> {F[t, {gno1}], -F[t, {gno2}]},
  cMSSM, 2|3 ];
In[98]:= In[98]:= HffSM[t_] := hffjob[
  S[1] -> {F[t, {gno1}], -F[t, {gno2}]},
  SM, _ ];
In[99]:= In[99]:= decay["hee"] := Hff[2];
In[100]:= In[100]:= decay["heeSM"] := HffSM[2];
In[101]:= In[101]:= decay["huu"] := Hff[3];
In[102]:= In[102]:= decay["huuSM"] := HffSM[3];
In[103]:= In[103]:= decay["hdd"] := Hff[4];
In[104]:= In[104]:= decay["hddSM"] := HffSM[4];
In[105]:= In[105]:= In[105]:=                                                   (*
decay["hcc"] := write[ CalcFeynAmp @
  amps[1, S[10, {hno}] -> {-F[12,{c1}], F[12,{c2}]}, "HMix"] ];
decay["hnn"] := write[ CalcFeynAmp @
  amps[1, S[10, {hno}] -> {F[11,{n1}], F[11,{c2}]}, "HMix"] ];
*)
In[106]:= In[106]:= In[106]:= _decay := Abort[];
In[107]:= In[107]:= In[107]:= decay[tag];
loading generic model file /home/pcl301/hahn/FeynArts/Models/Lorentz.gen
> $GenericMixing is OFF
generic model {Lorentz} initialized

loading classes model file /home/pcl301/hahn/FeynArts/Models/MSSMQCD.mod
  loading classes model file /home/pcl301/hahn/FeynArts/Models/MSSM.mod
loading classes model file /home/pcl301/hahn/fh-2a/gen/decays/dAlfa.mod
loading classes model file /home/pcl301/hahn/fh-2a/gen/decays/KW.mod
loading classes model file /home/pcl301/hahn/fh-2a/gen/decays/Hhh.mod
loading classes model file /home/pcl301/hahn/fh-2a/gen/decays/Kf.mod
loading classes model file /home/pcl301/hahn/fh-2a/gen/decays/Yuk.mod
loading classes model file /home/pcl301/hahn/fh-2a/gen/decays/HMixExt.mod
> 104 particles (incl. antiparticles) in 28 classes
> $CounterTerms are ON
> 685 vertices
> 67 counter terms of order 1
classes model {MSSMQCD, dAlfa, KW, Hhh, Kf, Yuk, HMixExt} initialized

Excluding 0 Generic, 3 Classes, and 3 Particles fields

inserting at level(s) {Generic, Classes}
> Top. 1: 1 Generic, 1 Classes insertions

Restoring 0 Generic, 3 Classes, and 3 Particles fields
in total: 1 Generic, 1 Classes insertions

Excluding 0 Generic, 3 Classes, and 3 Particles fields

Restoring 0 Generic, 3 Classes, and 3 Particles fields
in total: 0 Generic, 0 Classes insertions

creating amplitudes at level(s) {Generic, Classes}
> Top. 1: 1 Generic, 1 Classes amplitudes
in total: 1 Generic, 1 Classes amplitudes

preparing FORM code in /home/pcl301/hahn/fh-2a/gen/decays/fc-amp-1.frm
running FORM... 
ok


Excluding 0 Generic, 3 Classes, and 3 Particles fields

inserting at level(s) {Generic, Classes}
> Top. 1: 10 Generic, 202 Classes insertions
> Top. 2: 2 Generic, 20 Classes insertions
> Top. 3: 2 Generic, 46 Classes insertions
> Top. 4: 2 Generic, 20 Classes insertions
> Top. 5: 2 Generic, 20 Classes insertions
> Top. 6: 10 Generic, 118 Classes insertions

Restoring 0 Generic, 3 Classes, and 3 Particles fields
in total: 28 Generic, 426 Classes insertions

Excluding 0 Generic, 3 Classes, and 3 Particles fields

inserting at level(s) {Generic, Classes}
> Top. 1: 1 Generic, 1 Classes insertions
> Top. 2: 2 Generic, 5 Classes insertions

Restoring 0 Generic, 3 Classes, and 3 Particles fields
in total: 3 Generic, 6 Classes insertions

creating amplitudes at level(s) {Generic, Classes}
