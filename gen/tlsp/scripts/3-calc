#! /bin/sh -x

test $# -ne 2 && {
  cat << _EOF_
Usage:  $0 se cto
calculates the 'se' 2L self-energy with TuCalc/FormCalc
_EOF_
  exit 1
}

in=m/$1/2-prep.$2
test -f $in || exit 1
out=m/$1/3-calc.$2
rm -f $out*

case $2 in
0)	# calculation of the 2L self-energies with TuCalc
time math -run in=\"$in\" \
          -run out=\"$out\" << \_EOF_ > $out.log
AppendTo[$Echo, "stdout"];
$Path = Flatten[{
  ToFileName[{"twocalc"}],
  ToFileName[{"twocalc", "work"}],
  ToFileName[{"twocalc", "TuCalc", "Code"}],
  $Path }];

<< packages`MUERules`;

<< TuCalc`;
$VeryVerbose = 0;
SetOptions[TwoLoop,
  CollectFunction -> 0,
  Dimension -> $D,
  DimReduction -> True];
SetOptions[TwoLoopSum,
  CollectFunction -> 0,
  SelfEnergyPart -> 8];
TwoLoopSum[0] = 0;

SetOptions[Simplify, TimeConstraint -> 10];

GG[s_][cto_][fi__][kin_] := GG[s][cto][fi][kin] = Coupling[Unique[]];

amp = TwoLoopSum[Get[in] /. G -> GG];


<< packages`UseSimplePackage`;
<< packages`USfSimplify`;
<< packages`U2Simplify`;

amp = UseSimplePackage[amp];

amp = U2Simplify @ USfSimplify @ amp;

amp = amp /. {
  $D | dim -> 4 - 2 del,
  A0[m_] :> A0[m^2],
  B0[p_, m1_, m2_] :> B0[p, m1^2, m2^2],
  T[Df[k1, m1_] Df[k3, m2_] Df[k4, m3_]] :> T134[m1^2, m2^2, m3^2] };

Put[amp, out];

_EOF_
;;

1)	# calculation of the 1L counterterm diagrams with FormCalc
time math -run in=\"$in\" \
          -run out=\"$out\" << \_EOF_ > $out.log
AppendTo[$Echo, "stdout"];

<< packages`FCSettings`;

amp = Plus@@ CalcFeynAmp[Get[in]];

amp = amp //. Join[Subexpr[], Abbr[]] /.
  Pair[_k, _k] -> ExtMomSq /.
  ToOldBRules /.
  {dMWsq1/MW2 -> dMWsq1MW2, dMZsq1/MZ2 -> dMZsq1MZ2};

Put[amp, out];

Uninstall[$ReadFormHandle];
_EOF_
;;
esac

gzip $out.log

test -f $out

