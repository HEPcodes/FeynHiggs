#! /bin/bash -x

[[ "$1" =~ (bsgamma|bsglu) ]] || {
  echo "Usage:  $0 tags|files..."
  exit 1
}

proc="${BASH_REMATCH[1]}"
out="f/$proc"

for f in "$@" ; do
  [[ "$f" =~ ($proc)[\ -](Hp|Cha|Neu|Glu|SM) ]]
  f2="m/${BASH_REMATCH[1]}-${BASH_REMATCH[2]}.m"
  test -f "$f2" || {
    echo "$f not found/not matching"
    exit 1
  }
  in+=",\"$f2\""
done

shopt -s nullglob
test -d f || mkdir f
rm -f "$out".*

math -run "declif=\"${proc^^}_H\"; in={${in:1}}; out=\"$out\"; debug=${DEBUG:-0}" << \_EOF_ >> "$out.log"
AppendTo[$Echo, "stdout"];

<< FormCalc`

<< FormCalc`tools`btensor`

NClear[];
N[sqrt2] = Sqrt[2.];
sqrt2/: sqrt2/2 = 1/sqrt2;
sqrt2/: sqrt2^2 = 2;
sqrt2/: sqrt2^-2 = 1/2;

Format[Mino3, FortranForm] := "M_3";
Format[Mino3C, FortranForm] := "M_3C";

Mf[4,3] =.;
MB = Mf[4,3];
Mf2[4,3] =.;
MB2 = Mf2[4,3];

$DebugPre[1] = "#ifdef DETAILED_DEBUG\n";
$DebugCmd[1] := "DCONST \"`1``2` =\", `3` ENDL\n";
$DebugPost[1] = "#endif\n";

all = Get/@ in /. {Sqrt[2] -> sqrt2, 1/Sqrt[2] -> 1/sqrt2};

Put[all, out <> ".m"];

hh = OpenFortran[out <> ".h"];

WriteExpr[hh, all,
  Type -> "ComplexType",
  (*TmpType -> False,*)
  DeclIf -> declif,
  Optimize -> True,
  FinalCollect -> True,
  DebugLines -> 1,
  (*MakeTmp -> (ToVars[_A0|_B0|_C0, Head]/@ # &),*)
  Expensive -> {_A0, _B0, _C0},
  RealArgs -> {A0, B0, C0},
  HornerStyle -> False];

Close[hh];
_EOF_

gzip "$out.log"

test -f "$out.h"


