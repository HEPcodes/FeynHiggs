#! /bin/sh -x
# takes gaugeless limit of MSSMCT.mod

rm -f $0.log*

math << \_EOF_ > $0.log
AppendTo[$Echo, "stdout"];

<< FeynArts`;
<< ../Packages/Gaugeless.m;
<< ../Packages/XfSimplify.m;
<< FormCalc`;


Xfmod[c_ == rhs_, {n_}] := (
  Print["Xf #", n, ": ", c];
  c == XfSimplify[rhs]
) /; !FreeQ[rhs, (Af | AfC)[3|4, __]];

Xfmod[other_, _] := other;


htmod[c_ == rhs_, {n_}] :=
Block[ {new},
  new = Map[NoGaugeCoupling, rhs, {2}];
  c == If[ FreeQ[new, ht], rhs,
    Print["ht #", n, ": ", c];
    Simplify[new /. ht -> htmt MT] /. htmt -> ht/MT ]
];

htmod[other_, _] := other;


removeEM[r_. Alfa p_Plus] := r removeEM[Distribute[Alfa p]] /;
  !FreeQ[p, Alfa^_?Negative];

removeEM[c_] := c /. Alfa | EL -> 0;


$CKM = True;

LoadModel["MSSMCT.0", ""];

(*
M$ClassesDescription = M$ClassesDescription /. {
  S[4] == d_ :> S[4] == (d /. (Mass -> _) -> (Mass -> MG0)),
  S[6] == d_ :> S[6] == (d /. (Mass -> _) -> (Mass -> MGp)) };
*)
M$ClassesDescription = Gaugeless[M$ClassesDescription];

M$CouplingMatrices = Gaugeless[M$CouplingMatrices];
M$CouplingMatrices = MapIndexed[Xfmod, M$CouplingMatrices];
M$CouplingMatrices = MapIndexed[htmod, M$CouplingMatrices];
M$CouplingMatrices = Map[removeEM, M$CouplingMatrices, {4}];
M$CouplingMatrices = DeleteCases[M$CouplingMatrices, _ == {{0..}..}];
M$CouplingMatrices = M$CouplingMatrices /.
  ht -> EL MT/(Sqrt[2] MW SB SW);
M$CouplingMatrices = M$CouplingMatrices //.
  { a_ CB2 + b_ S2B :> CB TermCollect[CB a + 2 SB b],
    a_ SB2 + b_ S2B :> SB TermCollect[SB a + 2 CB b] } /.
  SB/CB -> TB;
M$CouplingMatrices = FixedPoint[TermCollect, M$CouplingMatrices];

DumpModel["MSSMCT.gl"];

_EOF_

gzip $0.log

cat MSSMCT.{defs,gl,rc} > MSSMCTgl.mod

