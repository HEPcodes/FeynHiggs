*#define CHECK

#if 0
* hhh-SquaredME.F
* assembly of squared matrix element
* generated by FormCalc 8.4 on 13-Apr-2015 11:52
* this file is part of FeynHiggs
#endif

#include "hhh-vars.h"
#include "inline.h"

************************************************************************

	subroutine hhh_SquaredMEHel(res)
	implicit none
	RealType res(*)

#include "hhh-vars.h"

	ComplexType amp
	RealType ampsq

* hhh-BEGIN ABBR_HEL
* hhh-END ABBR_HEL

	ampsq = 0
* hhh-BEGIN FF_TREE
	Ctree(1) = 0

	call hhh_v0
* hhh-END FF_TREE

* hhh-BEGIN M2_TREE
	amp = 0
	amp = amp + 1*Ctree(1)
	ampsq = ampsq + Re(Conjugate(Ctree(1))*amp)
* hhh-END M2_TREE
	res(1) = ampsq

	ampsq = 0
* hhh-BEGIN FF_LOOP
	Cloop(1) = 0

	call hhh_v1

	LOOP(Gen4, 1,3,1)
	call hhh_v1_Gen4
	ENDLOOP(Gen4)

	LOOP(Cha5, 1,2,1)
	LOOP(Cha4, 1,2,1)
	call hhh_v1_Cha4_Cha5
	ENDLOOP(Cha4)
	ENDLOOP(Cha5)

	LOOP(Sfe4, 1,2,1)
	LOOP(Gen4, 1,3,1)
	call hhh_v1_Gen4_Sfe4
	ENDLOOP(Gen4)
	ENDLOOP(Sfe4)

	LOOP(Neu5, 1,4,1)
	LOOP(Neu4, 1,4,1)
	call hhh_v1_Neu4_Neu5
	ENDLOOP(Neu4)
	ENDLOOP(Neu5)

	LOOP(Cha6, 1,2,1)
	LOOP(Cha5, 1,2,1)
	LOOP(Cha4, 1,2,1)
	call hhh_v1_Cha4_Cha5_Cha6
	ENDLOOP(Cha4)
	ENDLOOP(Cha5)
	ENDLOOP(Cha6)

	LOOP(Sfe5, 1,2,1)
	LOOP(Sfe4, 1,2,1)
	LOOP(Gen4, 1,3,1)
	call hhh_v1_Gen4_Sfe4_Sfe5
	ENDLOOP(Gen4)
	ENDLOOP(Sfe4)
	ENDLOOP(Sfe5)

	LOOP(Neu6, 1,4,1)
	LOOP(Neu5, 1,4,1)
	LOOP(Neu4, 1,4,1)
	call hhh_v1_Neu4_Neu5_Neu6
	ENDLOOP(Neu4)
	ENDLOOP(Neu5)
	ENDLOOP(Neu6)

	LOOP(Sfe6, 1,2,1)
	LOOP(Sfe5, 1,2,1)
	LOOP(Sfe4, 1,2,1)
	LOOP(Gen4, 1,3,1)
	call hhh_v1_Gen4_Sfe4_Sfe5_Sfe6
	ENDLOOP(Gen4)
	ENDLOOP(Sfe4)
	ENDLOOP(Sfe5)
	ENDLOOP(Sfe6)
* hhh-END FF_LOOP

* hhh-BEGIN M2_LOOP
	amp = 0
	amp = amp + 1*Cloop(1)
	ampsq = ampsq + Re(Conjugate(Ctree(1))*amp)
	ampsq = ampsq + ampsq
	amp = 0
	amp = amp + 1*Cloop(1)
	ampsq = ampsq + Re(Conjugate(Cloop(1))*amp)
* hhh-END M2_LOOP
	res(2) = ampsq
	end

************************************************************************

	subroutine hhh_SquaredME(result)
	implicit none
	RealType result(*)

#include "hhh-vars.h"

* hhh-BEGIN VAR_DECL
	integer i, h, hmax, hsimd
	parameter (hmax = 1)
	parameter (hsimd = hmax)
	RealType res(2,hsimd)
	RealType rtree, rloop
	external hhh_SquaredMEHel
* hhh-END VAR_DECL

#include "inline.h"

* hhh-BEGIN INVARIANTS
* hhh-END INVARIANTS

* hhh-BEGIN ABBR_S
	call hhh_abbr0s
	call hhh_abbr1s1
	call hhh_abbr1s2
* hhh-END ABBR_S

* hhh-BEGIN ABBR_ANGLE
* hhh-END ABBR_ANGLE

* hhh-BEGIN HEL_LOOP
	h = 0

	do i = 0, hmax - 1

	  Hel(1) = 0
	  Hel(2) = 0
	  Hel(3) = Hel(2)

	  h = h + 1
	  call hhh_SquaredMEHel(res(1,h))
	enddo

* hhh-END HEL_LOOP

* hhh-BEGIN RESULT
	rtree = 0
	rloop = 0
	do i = 1, h
	  rtree = rtree + res(1,i)
	  rloop = rloop + res(2,i)
	enddo
	result(1) = rtree
#ifdef WF_RENORMALIZATION
	rloop = rloop + (WF_RENORMALIZATION)*rtree
#endif
	result(2) = rloop
* hhh-END RESULT

#ifdef CHECK
	print *, 'tree =', rtree
	print *, 'loop =', rloop
	stop
#endif

* hhh-END SQUAREDME
	end

