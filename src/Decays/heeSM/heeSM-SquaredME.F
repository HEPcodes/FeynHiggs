*#define CHECK

#if 0
* heeSM-SquaredME.F
* assembly of squared matrix element
* generated by FormCalc 9.8 (22 Apr 2019) on 20-Dec-2019 10:10
* this file is part of FeynHiggs
#endif

#include "heeSM-vars.h"
#include "inline.h"

************************************************************************

	subroutine heeSM_SquaredMEHel(res)
	implicit none
	RealType res(*)

#include "heeSM-vars.h"

	ComplexType amp
	RealType ampsq

* heeSM-BEGIN ABBR_HEL
	call heeSM_abbr0h
	call heeSM_abbr1h
* heeSM-END ABBR_HEL

	ampsq = 0
* heeSM-BEGIN FF_TREE
	Ctree(1) = 0

	call heeSM_v0
* heeSM-END FF_TREE

* heeSM-BEGIN M2_TREE
	amp = 0
	amp = amp + Ctree(1)
	ampsq = ampsq + Re(amp*Conjugate(Ctree(1)))
* heeSM-END M2_TREE
	res(1) = ampsq

	ampsq = 0
* heeSM-BEGIN FF_LOOP
	Cloop(1) = 0

	call heeSM_v1
* heeSM-END FF_LOOP

* heeSM-BEGIN M2_LOOP
	amp = 0
	amp = amp + Cloop(1)
	ampsq = ampsq + Re(amp*Conjugate(Ctree(1)))
	ampsq = ampsq + ampsq
	amp = 0
	amp = amp + Cloop(1)
	ampsq = ampsq + Re(amp*Conjugate(Cloop(1)))
* heeSM-END M2_LOOP
	res(2) = ampsq

	end

************************************************************************

	subroutine heeSM_SquaredME(result)
	implicit none
	RealType result(*)

#include "heeSM-vars.h"

* heeSM-BEGIN VAR_DECL
	integer i, h, hmax
	parameter (hmax = 2)
	RealType res(2,hmax)
	RealType rtree, rloop
	external heeSM_SquaredMEHel
* heeSM-END VAR_DECL

#include "inline.h"

* heeSM-BEGIN INVARIANTS
* heeSM-END INVARIANTS

* heeSM-BEGIN ABBR_S
	call heeSM_abbr1s
* heeSM-END ABBR_S

* heeSM-BEGIN ABBR_ANGLE
* heeSM-END ABBR_ANGLE

* heeSM-BEGIN HEL_LOOP

	h = 0
	do i = 0, hmax - 1

#define hval(s,m,a,b) a*mod(i/s,m)-b

	  Hel0(1) = 0
	  Hel0(2) = hval(1,2,2,1)
	  Hel0(3) = Hel0(2)
	  h = h + 1
	  call heeSM_SquaredMEHel(res(1,h))
	enddo

* heeSM-END HEL_LOOP

* heeSM-BEGIN RESULT
	rtree = 0
	rloop = 0
	do i = 1, h
	  rtree = rtree + res(1,i)
	  rloop = rloop + res(2,i)
	enddo
	result(1) = rtree
	result(2) = rloop

* heeSM-END RESULT

#ifdef CHECK
	print *, 'tree =', rtree
	print *, 'loop =', rloop
	stop
#endif

	end

