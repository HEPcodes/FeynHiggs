* FOSubtract.h
* the fixed-order subtraction terms
* this file is part of FeynHiggs
* last modified 5 Feb 16 th


        g1uC = gyMT*SB*
     &    (1 - cL/80.D0*(15*(2 - 7*CB2)*gMT2 - 
     &         (4*(45*htMT2 + gyMT2*(-44*SB2 + 7/4.D0*S2B**2)))/SB2))

#ifdef DETAILED_DEBUG
	DHIGGS "g1uC =", g1uC ENDL
#endif

        g1dC = CB*gyMT*
     &    (1 - cL/80.D0*(gMT2*(30 - 105*SB2) + gyMT2*(176 - 28*SB2)))

#ifdef DETAILED_DEBUG
	DHIGGS "g1dC =", g1dC ENDL
#endif

        g2uC = gMT*SB*(1 + 
     &      cL/240.D0*(540*htMT2 + gyMT2*(21*S2B**2 - 24*SB2) - 
     &          gMT2*(160*SB2 + 165/4.D0*S2B**2))/SB2)

#ifdef DETAILED_DEBUG
	DHIGGS "g2uC =", g2uC ENDL
#endif

        g2dC = CB*gMT*(1 - 
     &      cL/240.D0*(gyMT2*(24 - 84*SB2) + gMT2*(160 + 165*SB2)))

#ifdef DETAILED_DEBUG
	DHIGGS "g2dC =", g2dC ENDL
#endif

        sublog2L = cL**2/2.D0*
     &    (htMT2**2*vev**2*(tSUSY - tTop)*
     &      (g3MT**2*(64 - 96*xOS**2) - 
     &        3*htMT2*(2 + xOS**2)*(10 - (8 - xOS**2)*xOS**2) - 
     &        (96*g3MT**2 - 18*htMT2)*(tSUSY - tTop)))

#ifdef DETAILED_DEBUG
	DHIGGS "sublog2L =", sublog2L ENDL
#endif

        sublog1L = 1/(24.D0*Pi)*
     &    (Alfa1L*(2*(10*C2B**2*MW2*MZ2 - 
     &            4*MW2**2*(8 - 5*S2B**2) - MZ2**2*(5 + S2B**2))*
     &          (tCha - tTop) + 
     &         (36*MTy2**2 + (18*C2B*MTy2 - 84*C2B**2*MW2)*MZ2 + 
     &            MW2**2*(68 - 62*S2B**2) + 
     &            3*MZ2**2*(14 - S2B**2*(10 + 3*S2B**2)))*
     &          (tSUSY - tTop)))/(MW2*SW2)

#ifdef DETAILED_DEBUG
	DHIGGS "sublog1L =", sublog1L ENDL
#endif

	g1udC = g1dC + g1uC

	g2udC = g2dC + g2uC

	htC = 1/12.D0*(htMT*(12 - cL*(g1udC**2 + 3*g2udC**2)))

#ifdef DETAILED_DEBUG
	DHIGGS "htC =", htC ENDL
#endif

        lC = 1/12.D0*((gMT2 + gyMT2)*
     &       (3*C2B**2*(1 + cL*((gMT2 + gyMT2)*S2B**2)) + 
     &         9*cL*(C2B*htC**2*xOS**2)) - 
     &      cL*(6*gMT2*gyMT2 + 3*gyMT2**2 + 
     &         gMT2**2*(7 + 2*S2B**2) - 6*htC**4*(12 - xOS**2)*xOS**2))

#ifdef DETAILED_DEBUG
	DHIGGS "lC =", lC ENDL
#endif

        subnonlog = 1/12.D0*
     &    (vev**2*(3*C2B**2*(gMT2 + gyMT2) - 
     &        cL*(7*(g1dC**4 + g1uC**4) + 
     &           16*g1dC*g1uC*(g1dC**2 + g1uC**2 + g2udC**2) + 
     &           2*(g1uC**2*g2udC*(6*g2uC + g2udC) + 
     &              g1dC**2*(9*g1uC**2 + 6*g2dC*g2udC + g2udC**2))-
     &             4*g1udC**2*lC + 
     &           gMT2**2*(7 + (2 + 9*C2B**2)*S2B**2) + 
     &           3*(g2udC**2*
     &               (g2dC*(9*g2dC - 2*g2uC) + 9*g2uC**2 - 4*lC) + 
     &              gyMT2*(2*gMT2 + gyMT2)*(1 + 3*C2B**2*S2B**2))-
     &             ((9 - 3*C2B)*C2B*(gMT2 + gyMT2)*htC**2 + 
     &              htC**4*(72 - 6*xOS**2))*xOS**2)))

#ifdef DETAILED_DEBUG
	DHIGGS "subnonlog =", subnonlog ENDL
#endif

	subnonlog2La = 0
	subnonlog2Lb = 0

	if( loglevel .gt. 2 ) then
* subtraction of 2L thresholds
	  subnonlog2La = -cL**2/12.D0*(htMT**4*vev**2*
     &         (16*g3MT2*SB2*
     &            (24*xOS + (11 + xOS*(-26 - 2*xOS1) + xOS1)*xOS2)+
     &             3*htMT**2*
     &            (CB2*(-((1 + xOS1)*yOS**2*
     &                    (1 + (-19 - 96*Kfac)*xOS1)) + 
     &                 48*xOS*yOS*
     &                  (xOS1*(1 + 4*Kfac) + (2 + 12*Kfac)) + 
     &                 3*((-9 - 144*Kfac - 4*pi**2) + 
     &                    xOS1*(10 - 96*Kfac + 25*xOS1))) - 
     &              6*(1 - 16*lf(1) + 
     &                 mueOS2*
     &                  (2*
     &                     (2*(3 - lf(1)) - 
     &                       (5 + xOS1)*xOS2*(1 + lf(1))) + 
     &                    (6 - xOS2*(11 + xOS1))*lf(2)) - 
     &                 xOS2*(14 - 8*lf(1) + 8*lf(2) - 
     &                    xOS2*(11 - SB2*xOS2 - lf(1) + lf(2))) + 
     &                 8*lf(3)))))/SB2

* subtraction of 2L terms from MS -> OS conversion of 1L MS result

	  if( abs(xOS) .gt. 1D-12 ) then
	    if( abs(mueOS1) .gt. 1D-12 ) then
	      subnonlog2Lb = cL**2/192.D0*(htMT2*vev**2*xOS*
     &         (C2B*(3*gMT2 + C2B*(-gMT2 - gyMT2) + 3*gyMT2) + 
     &           24*htMT2 - 4*xOS2)*
     &         (mueOS1*(128*g3MT**2*mueOS1*SB2**2*
     &             (7 + 5*xOS + xOS1) - 
     &            htMT2*(48*CB2*
     &                (3*mueOS2**2*SB2*xOS + 
     &                  mueOS*mueOS1*
     &                   (S2B*(-3 - 3*xOS1) + pi*sqrt3*S2B)) - 
     &               xOS*(12*SB2*
     &                   (9 + mueOS2*(9 - 44*SB2) + 32*SB2) + 
     &                  mueOS1*
     &                   (32*SB2**2*
     &                      (-3*log2*xOS2 + pi*sqrt3*mueOS2) + 
     &                     S2B**2*
     &                      (99 + 36*xOS1 - 
     &                       8*
     &                       ((9 - 2*pi*sqrt3)*mueOS2 + 
     &                       pi*sqrt3*(2 + xOS1))))) + 
     &               mueOS1*
     &                (16*(9 - 2*pi*sqrt3)*(CB2**2*mueOS2*xOS) - 
     &                  16*mueOS*S2B*
     &                   (SB2*(9 + 9*xOS1) + 
     &                     sqrt3*pi*(-3*SB2 + 2*xOS2)))))+
     &           72*htMT2*SB2*xOS*
     &          (mueOS2**2*(-mueOS1 + mueOS2)*log(mueOS2) - 
     &            2*mueOS1**2*
     &             (mueOS1*(1 + mueOS2)*log(abs(mueOS1)) +
     &                 SB2*xOS2*log(abs(xOS))))))/
     &         (mueOS1**2*SB2**2)
	    else
	      subnonlog2Lb = cL**2/192.D0*(htMT2*vev**2*xOS*
     &         (C2B*(3*gMT2 + C2B*(-gMT2 - gyMT2) + 3*gyMT2) + 
     &           24*htMT2 - 4*xOS2)*
     &         (128*g3MT**2*SB2**2*(7 + 5*xOS + xOS1) + 
     &           htMT2*(16*S2B*
     &             (9 + 9*xOS1 + pi*sqrt3*(-1 - 2*xOS1)) + 
     &            xOS*(S2B**2*(27 + (36 - 8*pi*sqrt3)*xOS1) - 
     &               16*(9 - 2*(pi*sqrt3 + SB2*
     &                      (18 + 3*SB2 - 3*log2*SB2*xOS2 + 
     &                       pi*(-2*sqrt3 + 2*sqrt3*SB2)))) - 
     &               144*SB2**2*xOS2*log(abs(xOS))))))/SB2**2
	    endif
	  endif
	endif

